[{"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\index.tsx":"1","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\reportWebVitals.ts":"2","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\App.tsx":"3","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Landing\\index.tsx":"4","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Landing\\styles.ts":"5","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\API.ts":"6","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\response\\user_questions.ts":"7","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\utils\\getDate.ts":"8","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\utils\\getQuestionsMap.ts":"9","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\index.tsx":"10","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\RadarChart.tsx":"11","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\Heatmap.tsx":"12","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\Dialog.tsx":"13","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\UnsolvedQuestionsList.tsx":"14","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\Statistics.jsx":"15","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\response\\user_rating.ts":"16","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\utils\\getContestData.ts":"17","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\DonughtChart.tsx":"18","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\BubbleChart.tsx":"19","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\reducers\\store.ts":"20","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\reducers\\slices\\FetchedDataReducer.ts":"21"},{"size":575,"mtime":1609268010672,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":416,"mtime":1609272024318,"results":"25","hashOfConfig":"23"},{"size":2100,"mtime":1609272250428,"results":"26","hashOfConfig":"23"},{"size":1318,"mtime":1609003552114,"results":"27","hashOfConfig":"23"},{"size":352,"mtime":1609239029992,"results":"28","hashOfConfig":"23"},{"size":69978,"mtime":1609272208280,"results":"29","hashOfConfig":"23"},{"size":513,"mtime":1609139487849,"results":"30","hashOfConfig":"23"},{"size":1686,"mtime":1609272193481,"results":"31","hashOfConfig":"23"},{"size":8626,"mtime":1609262920666,"results":"32","hashOfConfig":"23"},{"size":3554,"mtime":1609262887870,"results":"33","hashOfConfig":"23"},{"size":5903,"mtime":1609271822988,"results":"34","hashOfConfig":"23"},{"size":4718,"mtime":1609270770828,"results":"35","hashOfConfig":"23"},{"size":2419,"mtime":1609239035053,"results":"36","hashOfConfig":"23"},{"size":5501,"mtime":1609272390828,"results":"37","hashOfConfig":"23"},{"size":2716,"mtime":1609234782255,"results":"38","hashOfConfig":"23"},{"size":832,"mtime":1609272298980,"results":"39","hashOfConfig":"23"},{"size":4053,"mtime":1609272224535,"results":"40","hashOfConfig":"23"},{"size":1138,"mtime":1609262348924,"results":"41","hashOfConfig":"23"},{"size":239,"mtime":1609268011740,"results":"42","hashOfConfig":"23"},{"size":478,"mtime":1609268339011,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"169pgua",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\index.tsx",[],["89","90"],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\reportWebVitals.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\App.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Landing\\index.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Landing\\styles.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\API.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\response\\user_questions.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\utils\\getDate.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\utils\\getQuestionsMap.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\index.tsx",["91"],"import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport BookmarksOutlinedIcon from \"@material-ui/icons/BookmarksOutlined\";\nimport BarChartTwoToneIcon from \"@material-ui/icons/BarChartTwoTone\";\nimport CodeforcesSVG from \"assets/Codeforces_logo.svg\";\nimport Heatmap from \"./Heatmap\";\nimport RadarChart from \"./RadarChart\";\nimport UnsolvedQuestionsList from \"./UnsolvedQuestionsList\";\nimport Statistics from \"./Statistics\";\nimport DonughtChart from \"./DonughtChart\";\nimport BubbleChart from \"./BubbleChart\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginRight: drawerWidth,\n    },\n    title: {\n      flexGrow: 1,\n    },\n    hide: {\n      display: \"none\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-start\",\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginRight: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginRight: 0,\n    },\n    displayImage: {\n      margin: \"2rem 0 0.5rem 0 \",\n      width: \"150px\",\n      height: \"150px\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      border: \"6px purple solid\",\n      borderRadius: \"5rem\",\n    },\n    ratingStyling: {\n      fontWeight: 700,\n      borderLeft: \"4px solid purple\",\n    },\n    footer: {\n      position: \"fixed\",\n      bottom: \"0\",\n      right: \"0\",\n      width: drawerWidth,\n      \"& a\": {\n        color: \"rgb(255, 255, 255, 0.6)\",\n      },\n      padding: \"1rem\",\n      fontSize: \"12px\",\n      textAlign: \"center\",\n      backgroundColor: \"#3a3939\",\n      color: \"rgb(255, 255, 255, 0.6)\",\n    },\n  })\n);\n\nexport default function PersistentDrawerRight() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        color=\"default\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <img src={CodeforcesSVG} alt=\"codeforces_logo\"></img>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            Codeforces Stats\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"end\"\n            onClick={handleDrawerOpen}\n            className={clsx(open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <div\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Heatmap drawerOpen={open} />\n        <Grid container direction=\"row\" justify=\"space-evenly\" style={{ margin: \"1rem 0 3rem 0\" }}>\n          <RadarChart />\n          <DonughtChart />\n        </Grid>\n        {/* <BubbleChart /> */}\n        {/* <Typography paragraph>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\n          et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum facilisis leo vel. Risus at\n          ultrices mi tempus imperdiet. Semper risus in hendrerit gravida rutrum quisque non tellus. Convallis\n          convallis tellus id interdum velit laoreet id donec ultrices. Odio morbi quis commodo odio aenean\n          sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies integer quis. Cursus euismod\n          quis viverra nibh cras. Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris\n          commodo quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue\n          eget arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\n          donec massa sapien faucibus et molestie ac.\n        </Typography> */}\n        <Statistics />\n        <UnsolvedQuestionsList />\n      </div>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n\n        <img\n          alt=\"profile_picture\"\n          src=\"//userpic.codeforces.com/1207268/title/315d51cd5abdf38a.jpg\"\n          className={classes.displayImage}\n        ></img>\n        <Typography variant=\"h6\" align=\"center\">\n          Rishabh Malhotra\n        </Typography>\n        <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" gutterBottom>\n          @rishgod\n        </Typography>\n        <Typography variant=\"h1\" align=\"center\" className={classes.ratingStyling}>\n          1785\n        </Typography>\n        <Typography\n          className={classes.ratingStyling}\n          variant=\"h6\"\n          align=\"center\"\n          style={{ marginBottom: \"1rem\", color: \"purple\" }}\n        >\n          Candidate MASTER\n        </Typography>\n        <Divider />\n        <Grid container style={{ paddingTop: \"0rem \" }}>\n          <Grid item style={{ borderRight: \"1px solid rgba(0, 0, 0, 0.12)\" }} xs={6}>\n            <Typography variant=\"h6\" align=\"center\">\n              Contest\n            </Typography>\n            <Typography variant=\"h6\" align=\"center\">\n              112\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"h6\" align=\"center\">\n              Question\n            </Typography>\n            <Typography variant=\"h6\" align=\"center\">\n              500\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider />\n        <List>\n          <ListItem button>\n            <ListItemIcon>\n              <BarChartTwoToneIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Codeforces Handle\" />\n          </ListItem>\n          <ListItem button>\n            <ListItemIcon>\n              <BookmarksOutlinedIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Codeforce Blog\" />\n          </ListItem>\n        </List>\n        <Divider />\n        <div className={classes.footer}>\n          Made with &#9829; by Rishabh Malhotra{\"  \"}•{\"  \"}\n          <a href=\"https://github.com/rishabh-malhotraa\" target=\"__blank\">\n            Github\n          </a>\n        </div>\n      </Drawer>\n    </div>\n  );\n}\n","C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\RadarChart.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\Heatmap.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\Dialog.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\UnsolvedQuestionsList.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\Statistics.jsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\response\\user_rating.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\utils\\getContestData.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\DonughtChart.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\components\\Dashboard\\BubbleChart.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\reducers\\store.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\codeforces-visualizer\\src\\reducers\\slices\\FetchedDataReducer.ts",["92"],"import { createSlice } from \"@reduxjs/toolkit\";\nimport StateInterface from \"reducers/types\";\n\nexport const uuidSlice = createSlice({\n  name: \"FetchDataReducer\",\n  initialState: {\n    value: {},\n  },\n  reducers: {\n    onuuidType: (state, action) => {\n      state.value = action.payload;\n    },\n  },\n});\n\n// export const selectuuid = (state: StateInterface): string => state.uuidOption.value;\n// export const { onuuidType } = uuidSlice.actions;\n\nexport default uuidSlice.reducer;\n",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":27,"column":8,"nodeType":"99","messageId":"100","endLine":27,"endColumn":19},{"ruleId":"97","severity":1,"message":"101","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":22},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"@typescript-eslint/no-unused-vars","'BubbleChart' is defined but never used.","Identifier","unusedVar","'StateInterface' is defined but never used.","no-global-assign","no-unsafe-negation"]