//@ts-ignore



export const RadarChart = () => {

  const { Attempts, total } = prepareData(questionMap);

  const dataII = Object.entries(Attempts).map(([key, value]) => {
    return {
      x: key,
      y: value / total,
    };
  });

}
      <VictoryChart polar theme={VictoryTheme.material} domain={{ y: [0, 5] }}>
        <VictoryGroup
          colorScale={["gold", "orange", "tomato"]}
          style={{ data: { fillOpacity: 0.2, strokeWidth: 2 } }}
        >
          {data.map((data, i) => {
            return <VictoryArea key={i} data={data} />;
          })}
        </VictoryGroup>
        {Object.keys(maxima).map((key, i) => {
          return (
            <VictoryPolarAxis
              key={i}
              dependentAxis
              style={{
                axisLabel: { padding: 10 },
                axis: { stroke: "none" },
                grid: { stroke: "grey", strokeWidth: 0.25, opacity: 0.5 },
              }}
              tickLabelComponent={<VictoryLabel labelPlacement="vertical" />}
              labelPlacement="parallel"
              axisValue={i + 1}
              label={key}
            />
          );
        })}
        <VictoryPolarAxis
          labelPlacement="parallel"
          tickFormat={() => ""}
          style={{
            axis: { stroke: "none" },
            grid: { stroke: "grey", opacity: 0.5 },
          }}
        />
      </VictoryChart>